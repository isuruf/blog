<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>www.conda-forge.org/blog</id>
  <title>conda-forge Blog</title>
  <updated>2021-01-29T19:54:04.984654+00:00</updated>
  <link href="www.conda-forge.org/blog"/>
  <link href="www.conda-forge.org/blog/blog/atom.xml"/>
  <generator uri="https://ablog.readthedocs.org" version="0.10.13">ABlog</generator>
  <entry>
    <id>www.conda-forge.org/blog/posts/2019-12-06-cfep09/</id>
    <title>Automatically Deployed ABI Migrations</title>
    <updated>2019-12-06T00:00:00+00:00</updated>
    <author>
      <name>C.J. Wright</name>
    </author>
    <content type="html">&lt;p&gt;Handling application binary interface (ABI) migrations has always been a hassle for Conda-Forge.
Maintaining ABI consistency helps enable the “just use conda-forge” experience for many of our users,
making certain that numpy’s blas is the same as scipy’s.
As libraries update their code, the new versions may be ABI incompatible, as function signatures and other symbols
may have changed, leading to the dreaded &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;SegmentationFault&lt;/span&gt;&lt;/code&gt; and other errors.&lt;/p&gt;
</content>
    <link href="www.conda-forge.org/blog/posts/2019-12-06-cfep09/" rel="alternate"/>
    <published>2019-12-06T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>www.conda-forge.org/blog/posts/2020-03-05-grayskull/</id>
    <title>By the power of Grayskull… I have the Conda recipe!</title>
    <updated>2020-02-04T00:00:00+00:00</updated>
    <author>
      <name>Marcelo Duarte Trevisani</name>
    </author>
    <content type="html">&lt;p&gt;&lt;span class="raw-html"&gt;&lt;em&gt;The main goal of the Skeleto&lt;s&gt;n&lt;/s&gt;r is to conquer Grayskull.&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;
</content>
    <link href="www.conda-forge.org/blog/posts/2020-03-05-grayskull/" rel="alternate"/>
    <published>2020-02-04T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>www.conda-forge.org/blog/posts/2020-02-04-GSoC/</id>
    <title>Google Summer of Code 2020 improved automatic maintenance of conda-forge</title>
    <updated>2020-02-04T00:00:00+00:00</updated>
    <author>
      <name>Filipe Pires Alvarenga Fernandes</name>
    </author>
    <content type="html">&lt;p&gt;The &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;conda-forge&lt;/span&gt;&lt;/code&gt; “autotick” bot is a crucial part of &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;conda-forge&lt;/span&gt;&lt;/code&gt;’s infrastructure.
It enables automatic maintenance of &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;conda-forge&lt;/span&gt;&lt;/code&gt; packages by pushing version updates to the
underlying software and enabling large migrations of packages from one dependency to another
(e.g., Python 3.7 to Python 3.8). As &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;conda-forg&lt;/span&gt;&lt;/code&gt; grows in size, with over 9,000 packages to date,
automatic maintenance of the &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;conda-forge&lt;/span&gt;&lt;/code&gt; ecosystem will become even more important.&lt;/p&gt;
</content>
    <link href="www.conda-forge.org/blog/posts/2020-02-04-GSoC/" rel="alternate"/>
    <published>2020-02-04T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>www.conda-forge.org/blog/posts/2020-03-10-pypy/</id>
    <title>PyPy builds on conda-forge</title>
    <updated>2020-03-10T00:00:00+00:00</updated>
    <author>
      <name>Isuru Fernando</name>
    </author>
    <content type="html">&lt;p&gt;conda-forge now supports PyPy3.6 as the python interpreter in a conda environment&lt;/p&gt;
</content>
    <link href="www.conda-forge.org/blog/posts/2020-03-10-pypy/" rel="alternate"/>
    <published>2020-03-10T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>www.conda-forge.org/blog/posts/2020-07-02-op-risk/</id>
    <title>Conda-Forge Operational Risk</title>
    <updated>2020-07-02T00:00:00+00:00</updated>
    <author>
      <name>C.J. Wright</name>
    </author>
    <content type="html">&lt;p&gt;Recently I’ve been thinking about operational risk (op. risk).
Operational risks arise from failures of processes, for instance a missing email, or an automated software system not running properly.
Many commercial institutions are interested in minimizing op. risk, since it is risk that produces no value, as opposed to risks associated with investing.
This is also something I think about in my job at &lt;a class="reference external" href="https://www.lab49.com/"&gt;Lab49&lt;/a&gt;, where I’m a software engineering consultant focusing on financial institutions.
I think there is also a good analogy for Conda-Forge, even though we are not a commercial outfit.
In this case the risk we incur isn’t the potential for lost earnings but frustration for our users and maintainers in the form of bugs and lackluster user experience.
In this post I explore three main sources of operational risk for Conda-Forge: Automation, Top-Down Control, and Self-Service Structure.&lt;/p&gt;
</content>
    <link href="www.conda-forge.org/blog/posts/2020-07-02-op-risk/" rel="alternate"/>
    <published>2020-07-02T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>www.conda-forge.org/blog/posts/2020-07-06-scipy-bof/</id>
    <title>Scipy 2020 Packaging BOF</title>
    <updated>2020-07-02T00:00:00+00:00</updated>
    <author>
      <name>C.J. Wright</name>
    </author>
    <content type="html">&lt;p&gt;Have some thoughts about conda-forge and how it can be expanded in a way that is sustainable? Join us in this virtual Birds of a Feather discussion where we’ll discuss maintenance, pain points, opportunities within conda-forge. Any and all are welcome, and we especially are seeking new viewpoints and opinions!&lt;/p&gt;
</content>
    <link href="www.conda-forge.org/blog/posts/2020-07-06-scipy-bof/" rel="alternate"/>
    <published>2020-07-02T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>www.conda-forge.org/blog/posts/2020-07-11-R-4/</id>
    <title>R 4.0 Migration Retrospective</title>
    <updated>2020-07-11T00:00:00+00:00</updated>
    <author>
      <name>Matthew R. Becker</name>
    </author>
    <content type="html">&lt;p&gt;While the R 4.0 migration has been functionally complete for quite a while, the recent migration of &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;r-java&lt;/span&gt;&lt;/code&gt; and
its dependents gives a good opportunity to write a retrospective on the technical issues with large-scale migrations
in &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;conda-forge&lt;/span&gt;&lt;/code&gt; and how we solved them.&lt;/p&gt;
</content>
    <link href="www.conda-forge.org/blog/posts/2020-07-11-R-4/" rel="alternate"/>
    <published>2020-07-11T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>www.conda-forge.org/blog/posts/2020-10-02-versions/</id>
    <title>The API Territory and Version Number Map</title>
    <updated>2020-10-02T00:00:00+00:00</updated>
    <author>
      <name>C.J. Wright</name>
    </author>
    <content type="html">&lt;p&gt;tl;dr Depending on specific version numbers of underlying libraries may be too inaccurate and cause
headaches as upstream libraries evolve and change.
A more detailed approach is needed.
In this post I outline current and potential work on a path towards a more complete inspection of
requirements based on APIs and dynamic pinning of libraries.&lt;/p&gt;
</content>
    <link href="www.conda-forge.org/blog/posts/2020-10-02-versions/" rel="alternate"/>
    <published>2020-10-02T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>www.conda-forge.org/blog/posts/2020-10-29-macos-arm64/</id>
    <title>macOS ARM builds on conda-forge</title>
    <updated>2020-10-29T00:00:00+00:00</updated>
    <author>
      <name>Isuru Fernando</name>
    </author>
    <content type="html">&lt;p&gt;A new platform &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;osx-arm64&lt;/span&gt;&lt;/code&gt; has been added to the build matrix of conda-forge.
&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;osx-arm64&lt;/span&gt;&lt;/code&gt; packages are built to run on upcoming macOS arm64 processors marketed
as &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Apple&lt;/span&gt; &lt;span class="pre"&gt;Silicon&lt;/span&gt;&lt;/code&gt;. An installer for this platform can be found
&lt;a class="reference external" href="https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-MacOSX-arm64.sh"&gt;here&lt;/a&gt;.&lt;/p&gt;
</content>
    <link href="www.conda-forge.org/blog/posts/2020-10-29-macos-arm64/" rel="alternate"/>
    <published>2020-10-29T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>www.conda-forge.org/blog/posts/2020-11-20-anaconda-tos/</id>
    <title>Package Distribution and the anaconda.com Terms of Service</title>
    <updated>2020-11-20T00:00:00+00:00</updated>
    <author>
      <name>conda-forge/core</name>
    </author>
    <content type="html">&lt;p&gt;Various members of the community have raised questions publicly and privately about the implications of Anaconda’s
new Terms of Service (TOS) on &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;anaconda.com&lt;/span&gt;&lt;/code&gt;. First of all, we understand your concerns. We would like to explain
a bit how &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;conda-forge&lt;/span&gt;&lt;/code&gt; works, how the TOS change affects us and &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;conda-forge&lt;/span&gt;&lt;/code&gt; users, and what our plans
as a community are for the future.&lt;/p&gt;
</content>
    <link href="www.conda-forge.org/blog/posts/2020-11-20-anaconda-tos/" rel="alternate"/>
    <published>2020-11-20T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>www.conda-forge.org/blog/posts/2020-12-26-year-in-review/</id>
    <title>2020 in Review</title>
    <updated>2020-12-26T00:00:00+00:00</updated>
    <author>
      <name>conda-forge/core</name>
    </author>
    <content type="html">&lt;p&gt;As 2020 winds down, the Core team thought it’d be fun to review some of the big accomplishments our community has made this year.&lt;/p&gt;
</content>
    <link href="www.conda-forge.org/blog/posts/2020-12-26-year-in-review/" rel="alternate"/>
    <published>2020-12-26T00:00:00+00:00</published>
  </entry>
</feed>
